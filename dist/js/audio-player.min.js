/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
/*!*****************************!*\
  !*** ./src/audio-player.js ***!
  \*****************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ AudioPlayer)
/* harmony export */ });
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var AudioPlayer = /*#__PURE__*/function () {
  function AudioPlayer(selector, options) {
    _classCallCheck(this, AudioPlayer);
    this.audioElement = document.querySelector(selector);
    this.audioSelector = selector;
    this.wrapperClasses = _toConsumableArray(this.audioElement.classList);
    this.options = options;
    this.url = this.getAudioUrl();

    // Check if the selector exists and is an audio element
    if (!this.audioElement || this.audioElement.tagName !== 'AUDIO') {
      throw new Error('Invalid audio element selector.');
    }

    // Create the audio player UI
    this.createAudioPlayerUI();
  }
  _createClass(AudioPlayer, [{
    key: "getAudioUrl",
    value: function getAudioUrl() {
      // Check if the 'src' attribute is set
      var audioUrl = this.audioElement.src;

      // If 'src' is not set, check for <source> elements
      if (!audioUrl) {
        var sourceElements = this.audioElement.querySelectorAll('source');

        // Use the first <source> element's 'src' attribute
        if (sourceElements.length > 0) {
          audioUrl = sourceElements[0].src;
        }
      }

      // If no URL is found, return null or handle it as needed
      return audioUrl || null;
    }
  }, {
    key: "getClassNames",
    value: function getClassNames() {
      // Needs to be converted to array
      console.log(this.wrapperClasses);
      return this.wrapperClasses.join(' ');
    }
  }, {
    key: "getClassSelectors",
    value: function getClassSelectors() {
      var classes = [];
      this.wrapperClasses.forEach(function (className) {
        var selector = ".".concat(className);
        classes.push(selector);
      });
      return classes.join('');
    }
  }, {
    key: "createAudioPlayerUI",
    value: function createAudioPlayerUI() {
      var template = "\n      <div class=\"audio-player ".concat(this.getClassNames(), "\">\n        <button class=\"play-button\">Play</button>\n        <button class=\"pause-button\">Pause</button>\n        <input type=\"range\" class=\"volume-control\" />\n        <!-- Add other UI elements as needed -->\n      </div>\n    ");
      this.audioElement.insertAdjacentHTML('afterend', template);
      this.audioElement.remove();
      this.addEventListeners();
    }
  }, {
    key: "addEventListeners",
    value: function addEventListeners() {
      var _this = this;
      // Add event listeners to your custom UI elements
      var playButton = document.querySelector(".audio-player".concat(this.getClassSelectors(), " .play-button"));
      var pauseButton = document.querySelector(".audio-player".concat(this.getClassSelectors(), "  .pause-button"));
      console.log(".audio-player".concat(this.getClassSelectors(), " .play-button"));
      console.log(playButton);
      playButton.addEventListener('click', function () {
        return _this.play();
      });
      pauseButton.addEventListener('click', function () {
        return _this.pause();
      });
    }
  }, {
    key: "play",
    value: function play() {
      this.audioElement.play();
    }
  }, {
    key: "pause",
    value: function pause() {
      this.audioElement.pause();
    }
  }]);
  return AudioPlayer;
}();

/******/ })()
;
//# sourceMappingURL=audio-player.min.js.map